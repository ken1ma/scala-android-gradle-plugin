plugins {
    id 'java-gradle-plugin' // [Gradle Plugin Development Plugin](https://docs.gradle.org/current/userguide/java_gradle_plugin.html)
    id 'scala'              // [Scala Plugin](https://docs.gradle.org/current/userguide/scala_plugin.html)
}

scala {
    //zincVersion = "1.4.3" // [incremental compiler](https://github.com/sbt/zinc)
    /*
        Specifying a version above 1.3.5 results in
            Execution failed for task ':plugin:compileScala'.
            > The version of 'scala-library' was changed while using the default Zinc version. Version 2.13.3 is not compatible with org.scala-sbt:zinc_2.12:1.3.5

        Related: https://github.com/gradle/gradle/issues/2158#issuecomment-544143722
    */
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // https://docs.gradle.org/current/samples/sample_building_scala_applications.html
    implementation 'org.scala-lang:scala-library:2.13.3'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.3'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.3.0' // for org.scalatest.junit.JUnitRunner
    // TODO: scala-xml may be needed https://docs.gradle.org/current/samples/sample_building_scala_applications.html
}

gradlePlugin {
    // Define the plugin
    plugins {
        scalaAndroidPlugin {
            id = 'jp.ken1ma.scala.android.gradle.plugin'
            implementationClass = 'jp.ken1ma.scala.android.gradle.plugin.ScalaAndroidGradlePlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
